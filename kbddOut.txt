KBDD Standard output
KBDD: limit 104857600
limit is 104857600
KBDD: # input vars
KBDD: boolean a[3..0] b[3..0] cin d[15..0]
KBDD: 
KBDD: # define the correct circuit
KBDD: adder 4 cout_gold sum[3..0] a[3..0] b[3..0] cin
KBDD: 
KBDD: # define the bug circuit
KBDD: eval q1 a0 ^ b0
KBDD: eval q2 a1 ^ b1
KBDD: eval q3 a2 ^ b2
KBDD: eval q4 a3 ^ b3
KBDD: eval c1 (cin&a0) + (cin&b0) + (a0&b0)
KBDD: eval c2 (c1&a1) + (c1&b1) + (a1&b1)
KBDD: eval c3 (c2&a2) + (c2&b2) + (a2&b2)
KBDD: eval c4 (c3&a3) + (c3&b3) + (a3&b3)
KBDD: eval select (d0 & !q1 & !q2 & !q3 & !q4) + (d1 & q1 & !q2 & !q3 & !q4) + (d2 & !q1 & q2 & !q3 & !q4) + (d3 & q1 & q2 & !q3 & !q4) + (d4 & !q1 & !q2 & q3 & !q4) + (d5 & q1 & !q2 & q3 & !q4) + (d6 & !q1 & q2 & q3 & !q4) + (d7 & q1 & q2 & q3 & !q4) + (d8 & !q1 & !q2 & !q3 & q4) + (d9 & q1 & !q2 & !q3 & q4) + (d10 & !q1 & q2 & !q3 & q4) + (d11 & q1 & q2 & !q3 & q4) + (d12 & !q1 & !q2 & q3 & q4) + (d13 & q1 & !q2 & q3 & q4) + (d14 & !q1 & q2 & q3 & q4) + (d15 & q1 & q2 & q3 & q4)
KBDD: eval repair (select & cin)+(!select & c4 )
KBDD: 
KBDD: # make the Z function that compares the right version of
KBDD: # the network and the version with the MUX replacing
KBDD: 
KBDD: # suspect gate (this is EXNOR of cout and repair functions)
KBDD: eval Z repair & cout_gold + !repair & !cout_gold 
KBDD: quantify u ForallZ Z a[3..0] b[3..0] cin
KBDD: # let’s ask kbdd to show an equation for this quantified function
KBDD: sop ForallZ
  !d14 & !d13 & !d12 & !d11 & !d10 & !d9 & !d8 & !d7 & !d6 & !d5 & !d4 & !d3 & !d2 & !d1 & !d0
KBDD: # what values of the d’s make this function == 1?
KBDD: satisfy ForallZ
Variables: d14 d13 d12 d11 d10 d9 d8 d7 d6 d5 d4 d3 d2 d1 d0
000000000000000
KBDD: # that’s it!
KBDD: quit

KBDD Standard error
q1: a0 ^ b0 
q2: a1 ^ b1 
q3: a2 ^ b2 
q4: a3 ^ b3 
c1: (cin&a0) + (cin&b0) + (a0&b0) 
c2: (c1&a1) + (c1&b1) + (a1&b1) 
c3: (c2&a2) + (c2&b2) + (a2&b2) 
c4: (c3&a3) + (c3&b3) + (a3&b3) 
select: (d0 & !q1 & !q2 & !q3 & !q4) + (d1 & q1 & !q2 & !q3 & !q4) + (d2 & !q1 & q2 & !q3 & !q4) + (d3 & q1 & q2 & !q3 & !q4) + (d4 & !q1 & !q2 & q3 & !q4) + (d5 & q1 & !q2 & q3 & !q4) + (d6 & !q1 & q2 & q3 & !q4) + (d7 & q1 & q2 & q3 & !q4) + (d8 & !q1 & !q2 & !q3 & q4) + (d9 & q1 & !q2 & !q3 & q4) + (d10 & !q1 & q2 & !q3 & q4) + (d11 & q1 & q2 & !q3 & q4) + (d12 & !q1 & !q2 & q3 & q4) + (d13 & q1 & !q2 & q3 & q4) + (d14 & !q1 & q2 & q3 & q4) + (d15 & q1 & q2 & q3 & q4) 
repair: (select & cin)+(!select & c4 ) 
Z: repair & cout_gold + !repair & !cout_gold  